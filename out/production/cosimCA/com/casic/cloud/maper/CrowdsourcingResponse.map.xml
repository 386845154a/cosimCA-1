<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponse">
	<resultMap id="CrowdsourcingResponse" type="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponse">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="code" column="CODE" jdbcType="VARCHAR"/>
		<result property="operaterId" column="OPERATER_ID" jdbcType="NUMERIC"/>
		<result property="operaterName" column="OPERATER_NAME" jdbcType="VARCHAR"/>
		<result property="operaterEnterpId" column="OPERATER_ENTERP_ID" jdbcType="NUMERIC"/>
		<result property="operaterEnterpName" column="OPERATER_ENTERP_NAME" jdbcType="VARCHAR"/>
		<result property="operateDate" column="OPERATE_DATE" jdbcType="DATE"/>
		<result property="publishStatus" column="PUBLISH_STATUS" jdbcType="VARCHAR"/>
		<result property="sourceformCrowdsourcingId" column="SOURCEFORM_CROWDSOURCING_ID" jdbcType="NUMERIC"/>
		<result property="sourceformCrowdsourcingCode" column="SOURCEFORM_CROWDSOURCING_CODE" jdbcType="VARCHAR"/>
		<result property="materialId" column="MATERIAL_ID" jdbcType="NUMERIC"/>
		<result property="materialCode" column="MATERIAL_CODE" jdbcType="VARCHAR"/>
		<result property="materialName" column="MATERIAL_NAME" jdbcType="VARCHAR"/>
		<result property="materialType" column="MATERIAL_TYPE" jdbcType="VARCHAR"/>
		<result property="materialBomLevel" column="MATERIAL_BOM_LEVEL" jdbcType="VARCHAR"/>
		<result property="currency" column="CURRENCY" jdbcType="VARCHAR"/>
		<result property="quote" column="QUOTE" jdbcType="NUMERIC"/>
		<result property="forecastCompleteTime" column="FORECAST_COMPLETE_TIME" jdbcType="DATE"/>
	</resultMap>

	<sql id="columns">
		ID,CODE,OPERATER_ID,OPERATER_NAME,OPERATER_ENTERP_ID,OPERATER_ENTERP_NAME,OPERATE_DATE,PUBLISH_STATUS,SOURCEFORM_CROWDSOURCING_ID,SOURCEFORM_CROWDSOURCING_CODE,MATERIAL_ID,MATERIAL_CODE,MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_BOM_LEVEL,CURRENCY,QUOTE,FORECAST_COMPLETE_TIME
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(code)"> AND CODE  LIKE #{code}  </if>
			<if test="@Ognl@isNotEmpty(operaterId)"> AND OPERATER_ID  =#{operaterId} </if>
			<if test="@Ognl@isNotEmpty(operaterName)"> AND OPERATER_NAME  LIKE #{operaterName}  </if>
			<if test="@Ognl@isNotEmpty(operaterEnterpId)"> AND OPERATER_ENTERP_ID  =#{operaterEnterpId} </if>
			<if test="@Ognl@isNotEmpty(operaterEnterpName)"> AND OPERATER_ENTERP_NAME  LIKE #{operaterEnterpName}  </if>
			<if test="@Ognl@isNotEmpty(operateDate)"> AND OPERATE_DATE  =#{operateDate} </if>
			<if test="@Ognl@isNotEmpty(beginoperateDate)"> AND OPERATE_DATE  >=#{beginoperateDate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endoperateDate)"> AND OPERATE_DATE <![CDATA[ <=#{endoperateDate,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(publishStatus)"> AND PUBLISH_STATUS  LIKE #{publishStatus}  </if>
			<if test="@Ognl@isNotEmpty(sourceformCrowdsourcingId)"> AND SOURCEFORM_CROWDSOURCING_ID  =#{sourceformCrowdsourcingId} </if>
			<if test="@Ognl@isNotEmpty(sourceformCrowdsourcingCode)"> AND SOURCEFORM_CROWDSOURCING_CODE  LIKE #{sourceformCrowdsourcingCode}  </if>
			<if test="@Ognl@isNotEmpty(materialId)"> AND MATERIAL_ID  =#{materialId} </if>
			<if test="@Ognl@isNotEmpty(materialCode)"> AND MATERIAL_CODE  LIKE #{materialCode}  </if>
			<if test="@Ognl@isNotEmpty(materialName)"> AND MATERIAL_NAME  LIKE #{materialName}  </if>
			<if test="@Ognl@isNotEmpty(materialType)"> AND MATERIAL_TYPE  LIKE #{materialType}  </if>
			<if test="@Ognl@isNotEmpty(materialBomLevel)"> AND MATERIAL_BOM_LEVEL  LIKE #{materialBomLevel}  </if>
			<if test="@Ognl@isNotEmpty(currency)"> AND CURRENCY  LIKE #{currency}  </if>
			<if test="@Ognl@isNotEmpty(quote)"> AND QUOTE  =#{quote} </if>
			<if test="@Ognl@isNotEmpty(forecastCompleteTime)"> AND FORECAST_COMPLETE_TIME  =#{forecastCompleteTime} </if>
			<if test="@Ognl@isNotEmpty(beginforecastCompleteTime)"> AND FORECAST_COMPLETE_TIME  >=#{beginforecastCompleteTime,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endforecastCompleteTime)"> AND FORECAST_COMPLETE_TIME <![CDATA[ <=#{endforecastCompleteTime,jdbcType=DATE}]]> </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponse">
		INSERT INTO cloud_crowdsourcing_response
		(ID,CODE,OPERATER_ID,OPERATER_NAME,OPERATER_ENTERP_ID,OPERATER_ENTERP_NAME,OPERATE_DATE,PUBLISH_STATUS,SOURCEFORM_CROWDSOURCING_ID,SOURCEFORM_CROWDSOURCING_CODE,MATERIAL_ID,MATERIAL_CODE,MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_BOM_LEVEL,CURRENCY,QUOTE,FORECAST_COMPLETE_TIME)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{code,jdbcType=VARCHAR}, #{operaterId,jdbcType=NUMERIC}, #{operaterName,jdbcType=VARCHAR}, #{operaterEnterpId,jdbcType=NUMERIC}, #{operaterEnterpName,jdbcType=VARCHAR}, #{operateDate,jdbcType=DATE}, #{publishStatus,jdbcType=VARCHAR}, #{sourceformCrowdsourcingId,jdbcType=NUMERIC}, #{sourceformCrowdsourcingCode,jdbcType=VARCHAR}, #{materialId,jdbcType=NUMERIC}, #{materialCode,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, #{materialType,jdbcType=VARCHAR}, #{materialBomLevel,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, #{quote,jdbcType=NUMERIC}, #{forecastCompleteTime,jdbcType=DATE})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM cloud_crowdsourcing_response 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponse">
		UPDATE cloud_crowdsourcing_response SET
		CODE=#{code,jdbcType=VARCHAR},
		OPERATER_ID=#{operaterId,jdbcType=NUMERIC},
		OPERATER_NAME=#{operaterName,jdbcType=VARCHAR},
		OPERATER_ENTERP_ID=#{operaterEnterpId,jdbcType=NUMERIC},
		OPERATER_ENTERP_NAME=#{operaterEnterpName,jdbcType=VARCHAR},
		OPERATE_DATE=#{operateDate,jdbcType=DATE},
		PUBLISH_STATUS=#{publishStatus,jdbcType=VARCHAR},
		SOURCEFORM_CROWDSOURCING_ID=#{sourceformCrowdsourcingId,jdbcType=NUMERIC},
		SOURCEFORM_CROWDSOURCING_CODE=#{sourceformCrowdsourcingCode,jdbcType=VARCHAR},
		MATERIAL_ID=#{materialId,jdbcType=NUMERIC},
		MATERIAL_CODE=#{materialCode,jdbcType=VARCHAR},
		MATERIAL_NAME=#{materialName,jdbcType=VARCHAR},
		MATERIAL_TYPE=#{materialType,jdbcType=VARCHAR},
		MATERIAL_BOM_LEVEL=#{materialBomLevel,jdbcType=VARCHAR},
		CURRENCY=#{currency,jdbcType=VARCHAR},
		QUOTE=#{quote,jdbcType=NUMERIC},
		FORECAST_COMPLETE_TIME=#{forecastCompleteTime,jdbcType=DATE}
		WHERE
		ID=#{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="CrowdsourcingResponse">
		SELECT <include refid="columns"/>
		FROM cloud_crowdsourcing_response
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="CrowdsourcingResponse">
		SELECT <include refid="columns"/>
		FROM cloud_crowdsourcing_response   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	<select id="getfromSourceId" parameterType="java.lang.Long" resultMap="CrowdsourcingResponse">
		SELECT <include refid="columns"/>
		FROM cloud_crowdsourcing_response
		WHERE
		SOURCEFORM_CROWDSOURCING_ID  =#{sourceformCrowdsourcingId}
	</select>
</mapper>
