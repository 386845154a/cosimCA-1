<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.casic.cloud.model.config.cloudSrc.CloudSrc">
	<resultMap id="CloudSrc" type="com.casic.cloud.model.config.cloudSrc.CloudSrc">
		<id property="id" column="id" jdbcType="NUMERIC"/>
		<result property="name" column="name" jdbcType="VARCHAR"/>
		<result property="pic" column="pic" jdbcType="VARCHAR"/>
		<result property="path" column="path" jdbcType="VARCHAR"/>
		<result property="info" column="info" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="columns">
		id,name,pic,path,info
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND id  =#{id} </if>
			<if test="@Ognl@isNotEmpty(name)"> AND name  LIKE #{name}  </if>
			<if test="@Ognl@isNotEmpty(pic)"> AND pic  LIKE #{pic}  </if>
			<if test="@Ognl@isNotEmpty(path)"> AND path  LIKE #{path}  </if>
			<if test="@Ognl@isNotEmpty(info)"> AND info  LIKE #{info}  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.casic.cloud.model.config.cloudSrc.CloudSrc">
		INSERT INTO cloud_src
		(id,name,pic,path,info)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM cloud_src 
		WHERE
		id=#{id}
	</delete>
	
	<update id="update" parameterType="com.casic.cloud.model.config.cloudSrc.CloudSrc">
		UPDATE cloud_src SET
		name=#{name,jdbcType=VARCHAR},
		pic=#{pic,jdbcType=VARCHAR},
		path=#{path,jdbcType=VARCHAR},
		info=#{info,jdbcType=VARCHAR}
		WHERE
		id=#{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="CloudSrc">
		SELECT <include refid="columns"/>
		FROM cloud_src
		WHERE
		id=#{id}
	</select>
	
	<select id="getAll" resultMap="CloudSrc">
		SELECT <include refid="columns"/>
		FROM cloud_src   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
	
	
	
		<select id="search" parameterType="java.lang.String"  resultMap="CloudSrc">
		SELECT <include refid="columns"/>
		FROM cloud_src   
		 where name like #{name}
		 
		order by id  desc
		 
	</select>
</mapper>
