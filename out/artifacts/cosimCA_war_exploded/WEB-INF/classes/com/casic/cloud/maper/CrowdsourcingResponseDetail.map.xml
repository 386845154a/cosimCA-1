<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponseDetail">
	<resultMap id="CrowdsourcingResponseDetail" type="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponseDetail">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="attachmentName" column="ATTACHMENT_NAME" jdbcType="VARCHAR"/>
		<result property="attachmentType" column="ATTACHMENT_TYPE" jdbcType="VARCHAR"/>
		<result property="attachmentInfo" column="ATTACHMENT_INFO" jdbcType="VARCHAR"/>
		<result property="uploadId" column="UPLOAD_ID" jdbcType="NUMERIC"/>
		<result property="uploadName" column="UPLOAD_NAME" jdbcType="VARCHAR"/>
		<result property="attachmentManageId" column="ATTACHMENT_MANAGE_ID" jdbcType="NUMERIC"/>
		<result property="operatingAuthority" column="OPERATING_AUTHORITY" jdbcType="VARCHAR"/>
		<result property="responseId" column="RESPONSE_ID" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,ATTACHMENT_NAME,ATTACHMENT_TYPE,ATTACHMENT_INFO,UPLOAD_ID,UPLOAD_NAME,ATTACHMENT_MANAGE_ID,OPERATING_AUTHORITY,RESPONSE_ID
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(attachmentName)"> AND ATTACHMENT_NAME  LIKE #{attachmentName}  </if>
			<if test="@Ognl@isNotEmpty(attachmentType)"> AND ATTACHMENT_TYPE  LIKE #{attachmentType}  </if>
			<if test="@Ognl@isNotEmpty(attachmentInfo)"> AND ATTACHMENT_INFO  LIKE #{attachmentInfo}  </if>
			<if test="@Ognl@isNotEmpty(uploadId)"> AND UPLOAD_ID  =#{uploadId} </if>
			<if test="@Ognl@isNotEmpty(uploadName)"> AND UPLOAD_NAME  LIKE #{uploadName}  </if>
			<if test="@Ognl@isNotEmpty(attachmentManageId)"> AND ATTACHMENT_MANAGE_ID  =#{attachmentManageId} </if>
			<if test="@Ognl@isNotEmpty(operatingAuthority)"> AND OPERATING_AUTHORITY  LIKE #{operatingAuthority}  </if>
			<if test="@Ognl@isNotEmpty(responseId)"> AND RESPONSE_ID  =#{responseId} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponseDetail">
		INSERT INTO cloud_crowdsourcing_response_detail
		(ID,ATTACHMENT_NAME,ATTACHMENT_TYPE,ATTACHMENT_INFO,UPLOAD_ID,UPLOAD_NAME,ATTACHMENT_MANAGE_ID,OPERATING_AUTHORITY,RESPONSE_ID)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{attachmentName,jdbcType=VARCHAR}, #{attachmentType,jdbcType=VARCHAR}, #{attachmentInfo,jdbcType=VARCHAR}, #{uploadId,jdbcType=NUMERIC}, #{uploadName,jdbcType=VARCHAR}, #{attachmentManageId,jdbcType=NUMERIC}, #{operatingAuthority,jdbcType=VARCHAR}, #{responseId,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM cloud_crowdsourcing_response_detail 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.casic.cloud.model.crowdsourcing.crowdsourcingResponse.CrowdsourcingResponseDetail">
		UPDATE cloud_crowdsourcing_response_detail SET
		ATTACHMENT_NAME=#{attachmentName,jdbcType=VARCHAR},
		ATTACHMENT_TYPE=#{attachmentType,jdbcType=VARCHAR},
		ATTACHMENT_INFO=#{attachmentInfo,jdbcType=VARCHAR},
		UPLOAD_ID=#{uploadId,jdbcType=NUMERIC},
		UPLOAD_NAME=#{uploadName,jdbcType=VARCHAR},
		ATTACHMENT_MANAGE_ID=#{attachmentManageId,jdbcType=NUMERIC},
		OPERATING_AUTHORITY=#{operatingAuthority,jdbcType=VARCHAR},
		RESPONSE_ID=#{responseId,jdbcType=NUMERIC}
		WHERE
		ID=#{id}
	</update>
	<delete id="delByMainId">
	    DELETE FROM cloud_crowdsourcing_response_detail
	    WHERE
	    response_id=#{responseId}
	</delete>    
	
	<select id="getCrowdsourcingResponseDetailList" resultMap="CrowdsourcingResponseDetail">
	    SELECT <include refid="columns"/>
	    FROM cloud_crowdsourcing_response_detail 
	    WHERE response_id=#{responseId}
	</select>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="CrowdsourcingResponseDetail">
		SELECT <include refid="columns"/>
		FROM cloud_crowdsourcing_response_detail
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="CrowdsourcingResponseDetail">
		SELECT <include refid="columns"/>
		FROM cloud_crowdsourcing_response_detail   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
</mapper>
