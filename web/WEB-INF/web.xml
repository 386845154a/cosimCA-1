<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name></display-name>
	<jsp-config>
		<taglib>
			<taglib-uri>http://www.jee-soft.cn/functions</taglib-uri>
			<taglib-location>/WEB-INF/tld/HtTag.tld</taglib-location>
		</taglib>
		
		<jsp-property-group>
			<description>Html Encoding</description>
			<display-name>Html Encoding Config</display-name>
			<url-pattern>*.html</url-pattern>
			<el-ignored>true</el-ignored>
			<page-encoding>utf-8</page-encoding>
			<scripting-invalid>true</scripting-invalid>
			
			<description>Htm Encoding</description>
			<display-name>Htm Encoding Config</display-name>
			<url-pattern>*.htm</url-pattern>
			<el-ignored>true</el-ignored>
			<page-encoding>utf-8</page-encoding>
			<scripting-invalid>true</scripting-invalid>
		</jsp-property-group>
	</jsp-config>
	
	<!--设置Spring的配置文件启动路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:conf/app-context.xml</param-value>
	</context-param>
	<!--设置Log4j的配置文件的路径 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:conf/log4j.xml</param-value>
	</context-param>
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>com.hotent.core.web.servlet.SpringMvcServlet</servlet-class>
		<!-- org.springframework.web.servlet.DispatcherServlet -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:conf/app-action.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>


	<servlet>
		<servlet-name>bpmImageServlet</servlet-name>
		<servlet-class>com.hotent.core.bpm.servlet.BpmImageServlet</servlet-class>
	</servlet>
	 <servlet>
    	<servlet-name>bpmXmlService</servlet-name>
    	<servlet-class>com.hotent.platform.web.servlet.BpmServiceServlet</servlet-class>
    </servlet>
    <servlet>
	  <servlet-name>Admin</servlet-name>
	  <servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	  <servlet-name>Admin</servlet-name>
	  <url-pattern>/admin</url-pattern>
	</servlet-mapping> 
	<!--upload测试 -->
	<servlet>
	<servlet-name>UploadHandleServlet</servlet-name>
	<servlet-class>com.casic.test.upload.UploadHandleServlet</servlet-class>
	</servlet>
	 
	<servlet-mapping>
	<servlet-name>UploadHandleServlet</servlet-name>
	<url-pattern>/Upload</url-pattern>
	</servlet-mapping>
 
	<!-- 附件上传 <servlet> <servlet-name>fileUpload</servlet-name> <servlet-class>com.hotent.platform.controller.system.FileUploadServlet</servlet-class> </servlet> -->
	<!--Log4j日志监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- Spring启动监听器 -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener> 
	<listener>
		<listener-class>com.hotent.core.web.listener.StartupListner</listener-class>
	</listener>

	<listener>
		<listener-class>com.hotent.core.web.listener.UserSessionListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.hotent.core.web.listener.ServerListener</listener-class>
	</listener>
	<!--
	<listener>
		<listener-class>com.hotent.platform.web.listener.CurrentProfileListener</listener-class>
	</listener>
	-->

	<!-- 用于相同线程间共享Request对象 -->
	

	<!-- 页面编码拦截器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.hotent.core.web.filter.EncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>contentType</param-name>
			<param-value>text/html;charset=UTF-8</param-value>
		</init-param>
	</filter>
	<filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.ht</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/servlet/ValidJs</url-pattern>
	</filter-mapping>

	<!-- 安全拦载器 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/logout</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_security_check</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_cas_security_check</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>*.ht</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!-- 附件上传 -->
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/file-upload</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/mobile</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_security_switch_user</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/j_spring_security_exit_user</url-pattern>
	</filter-mapping>
	<!-- 访问gzjs -->
	<filter>
	    <filter-name>GzipJsFilter</filter-name>    
	    <filter-class>com.hotent.core.web.filter.GzipJsFilter</filter-class>    
	    <init-param>    
	        <param-name>headers</param-name>
	        <param-value>Content-Encoding=gzip</param-value>    
	    </init-param>  
	</filter> 
	<filter-mapping>  
		<filter-name>GzipJsFilter</filter-name>  
		<url-pattern>*.gzjs</url-pattern>  
	</filter-mapping>
	<filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<!-- 访问gzjs -->

	<servlet>
		<servlet-name>ValidCode</servlet-name>
		<servlet-class>com.hotent.core.web.servlet.ValidCode</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ValidJS</servlet-name>
		<servlet-class>com.hotent.core.web.servlet.ValidJs</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ValidCode</servlet-name>
		<url-pattern>/servlet/ValidCode</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ValidJS</servlet-name>
		<url-pattern>/servlet/ValidJs</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.ht</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>bpmImageServlet</servlet-name>
		<url-pattern>/bpmImage</url-pattern>
	</servlet-mapping>
   <servlet-mapping>
    	<servlet-name>bpmXmlService</servlet-name>
    	<url-pattern>/xmlservice/*</url-pattern>
     </servlet-mapping>

	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>


	<!-- 附件上传 <servlet-mapping> <servlet-name>fileUpload</servlet-name> <url-pattern>/file-upload</url-pattern> </servlet-mapping> -->
	<servlet>
		<servlet-name>ReportServer</servlet-name>
		<servlet-class>com.fr.web.ReportServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet>
		<description>
		</description>
		<display-name>DownloadServlet</display-name>
		<servlet-name>DownloadServlet</servlet-name>
		<servlet-class>com.casic.cloud.pub.servlet.DownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ReportServer</servlet-name>
		<url-pattern>/ReportServer</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DownloadServlet</servlet-name>
		<url-pattern>/DownloadServlet</url-pattern>
	</servlet-mapping>

	<!-- 记录saas的功能 -->
	<filter>
		<filter-name>saasFilter</filter-name>
		<filter-class>com.casic.cloud.pub.filter.SAASFilter</filter-class>
		<init-param>
  			<param-name>pages</param-name>
  			<param-value>index.ht,loginCloud.ht</param-value>
  		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>saasFilter</filter-name>
		<url-pattern>*.ht</url-pattern>
	</filter-mapping>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<error-page>
		<error-code>403</error-code>
		<location>/commons/403.jsp</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/commons/500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/commons/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/commons/404.jsp</location>
	</error-page>


	<!-- Druid内置监控界面使用配置 -->
	<welcome-file-list>
		<welcome-file>welcome.jsp</welcome-file>
	</welcome-file-list>
	
	<mime-mapping> 
		<extension>htm</extension> 
		<mime-type>text/html;charset=utf-8</mime-type> 
	</mime-mapping> 
	
	
	
	
	
	
	<!-- 登出cas过滤器 -->

<filter>
  <filter-name>casClientLogoutFilter</filter-name>
  <filter-class>com.casic.cloud.casSessionFilter.CasLogoutFilter</filter-class>
  </filter>
  
  <filter-mapping>
  <filter-name>casClientLogoutFilter</filter-name>
  <url-pattern>/logout</url-pattern>
  </filter-mapping> 
   
<!-- 登录cas过滤器 添加session -->

 <filter>
  <filter-name>casClientSessionFilter</filter-name>
  <filter-class>com.casic.cloud.casSessionFilter.CasClientFilter</filter-class>
  </filter>
  
  <filter-mapping>
  <filter-name>casClientSessionFilter</filter-name>
  <url-pattern>/*</url-pattern>
  </filter-mapping>
<!-- cas session 属性监听器 -->
<!-- 
<listener>
<display-name>CasSessionListener</display-name>
<listener-class>com.casic.cloud.casSessionListener.CasSessionListener</listener-class>
</listener>
 -->
	<!-- 
	Cas单点登录客户端配置
	 
	 

  <listener>
    <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
  </listener>
  <filter>
    <filter-name>CAS Single Sign Out Filter</filter-name>
    <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS Single Sign Out Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>CASFilter</filter-name>
    <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
    <init-param>
      <param-name>casServerLoginUrl</param-name>
      <param-value>http://127.0.0.1:8080/casServer/login</param-value>
    </init-param>
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://localhost:9090</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CASFilter</filter-name>
    <url-pattern>/loginCloud.ht</url-pattern>
  </filter-mapping>

   <filter-mapping>
    <filter-name>CASFilter</filter-name>
    <url-pattern>/cloud/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>CAS Validation Filter</filter-name>
    <filter-class>
org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
    <init-param>
      <param-name>casServerUrlPrefix</param-name>
      <param-value>http://127.0.0.1:8080/casServer</param-value>
    </init-param>
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://localhost:9090</param-value>
    </init-param>
    <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
  </filter>
  <filter-mapping>
    <filter-name>CAS Validation Filter</filter-name>
    <url-pattern>/loginCloud.ht</url-pattern>
  </filter-mapping>
 
  <filter-mapping>
    <filter-name>CAS Validation Filter</filter-name>
    <url-pattern>/cloud/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    <filter-class>
org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>CAS Assertion Thread Local Filter</filter-name>
    <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS Assertion Thread Local Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

-->
</web-app>
