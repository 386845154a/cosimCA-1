<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.casic.cloud.model.tool.input.Cloud_tool_user_inputFile">
	<resultMap id="Cloud_tool_user_inputFile" type="com.casic.cloud.model.tool.input.Cloud_tool_user_inputFile">
		<id property="id" column="id" jdbcType="NUMERIC"/>
		<result property="cloudToolUserId" column="cloud_tool_user_id" jdbcType="NUMERIC"/>
		<result property="inputaddress" column="inputAddress" jdbcType="VARCHAR"/>
		<result property="toolName" column="toolName" jdbcType="VARCHAR"/>
		<result property="type" column="type" jdbcType="VARCHAR"/>
		<result property="generateStrategy" column="generateStrategy" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="columns">
		id,cloud_tool_user_id,inputAddress,toolName,type,generateStrategy
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND id  =#{id} </if>
			<if test="@Ognl@isNotEmpty(cloudToolUserId)"> AND cloud_tool_user_id  =#{cloudToolUserId} </if>
			<if test="@Ognl@isNotEmpty(inputaddress)"> AND inputAddress  LIKE #{inputaddress}  </if>
			<if test="@Ognl@isNotEmpty(type)"> AND type  LIKE #{type}  </if>
			<if test="@Ognl@isNotEmpty(generateStrategy)"> AND generateStrategy  LIKE #{generateStrategy}  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.casic.cloud.model.tool.input.Cloud_tool_user_inputFile">
		INSERT INTO cloud_tool_user_inputFile
		(id,cloud_tool_user_id,inputAddress,type,generateStrategy)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{cloudToolUserId,jdbcType=NUMERIC}, #{inputaddress,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{generateStrategy,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM cloud_tool_user_inputFile 
		WHERE
		id=#{id}
	</delete>
	
	<update id="update" parameterType="com.casic.cloud.model.tool.input.Cloud_tool_user_inputFile">
		UPDATE cloud_tool_user_inputFile SET
		cloud_tool_user_id=#{cloudToolUserId,jdbcType=NUMERIC},
		inputAddress=#{inputaddress,jdbcType=VARCHAR},
		type=#{type,jdbcType=VARCHAR},
		generateStrategy=#{generateStrategy,jdbcType=VARCHAR}
		WHERE
		id=#{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="Cloud_tool_user_inputFile">
		SELECT a.id,a.cloud_tool_user_id,a.inputAddress,a.type,a.generateStrategy,c.toolName
		FROM cloud_tool_user_inputFile a left join cloud_tool_user b left join cloud_tool c on b.toolId=c.toolId on a.cloud_tool_user_id=b.toolUserId
		WHERE
		id=#{id}
	</select>
	
	<select id="getAll" resultMap="Cloud_tool_user_inputFile">
		SELECT a.id,a.cloud_tool_user_id,a.inputAddress,a.type,a.generateStrategy,c.toolName
		FROM cloud_tool_user_inputFile a left join cloud_tool_user b left join cloud_tool c on b.toolId=c.toolId on a.cloud_tool_user_id=b.toolUserId 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
</mapper>
